{
  "pipelineConfig" : {
    "schemaVersion" : 6,
    "version" : 18,
    "pipelineId" : "2KafkaU1dace9ab-c780-4f99-ad72-5630861f7f37",
    "title" : "UtmAxgate_20200625",
    "description" : "",
    "uuid" : "3005c54c-d1d0-4603-9170-9107f6983ee7",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "edgeHttpUrl",
      "value" : "http://localhost:18633"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "errorRecordPolicy",
      "value" : "ORIGINAL_RECORD"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "logLevel",
      "value" : "INFO"
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    }, {
      "name" : "maxRunners",
      "value" : 0
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "runnerIdleTIme",
      "value" : 60
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ ]
    }, {
      "name" : "amazonEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.accessKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.secretKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.enableEMRDebugging",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "amazonEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "clusterConfig.clusterType",
      "value" : "LOCAL"
    }, {
      "name" : "clusterConfig.sparkMasterUrl",
      "value" : "local[*]"
    }, {
      "name" : "clusterConfig.deployMode",
      "value" : "CLIENT"
    }, {
      "name" : "clusterConfig.hadoopUserName",
      "value" : "hdfs"
    }, {
      "name" : "clusterConfig.stagingDir",
      "value" : "/streamsets"
    }, {
      "name" : "databricksConfig.baseUrl",
      "value" : null
    }, {
      "name" : "databricksConfig.credentialType",
      "value" : null
    }, {
      "name" : "databricksConfig.username",
      "value" : null
    }, {
      "name" : "databricksConfig.password",
      "value" : null
    }, {
      "name" : "databricksConfig.token",
      "value" : null
    }, {
      "name" : "databricksConfig.clusterConfig",
      "value" : "{\n    \"num_workers\": 8,\n    \"spark_version\": \"5.3.x-scala2.11\",\n    \"node_type_id\": \"i3.xlarge\"\n}"
    }, {
      "name" : "livyConfig.baseUrl",
      "value" : null
    }, {
      "name" : "livyConfig.username",
      "value" : null
    }, {
      "name" : "livyConfig.password",
      "value" : null
    }, {
      "name" : "databricksConfig.provisionNewCluster",
      "value" : true
    }, {
      "name" : "databricksConfig.clusterId",
      "value" : null
    }, {
      "name" : "databricksConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "ludicrousMode",
      "value" : false
    }, {
      "name" : "ludicrousModeInputCount",
      "value" : false
    }, {
      "name" : "advancedErrorHandling",
      "value" : false
    }, {
      "name" : "triggerInterval",
      "value" : 2000
    }, {
      "name" : "preprocessScript",
      "value" : ""
    }, {
      "name" : "transformerEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "transformerEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "transformerEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "transformerEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "transformerEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "transformerEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "transformerEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.accessKey",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.secretKey",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "transformerEMRConfig.useIAMRoles",
      "value" : false
    }, {
      "name" : "clusterConfig.callbackUrl",
      "value" : null
    }, {
      "name" : "googleCloudConfig.region",
      "value" : null
    }, {
      "name" : "googleCloudConfig.customRegion",
      "value" : null
    }, {
      "name" : "googleCloudConfig.gcsStagingUri",
      "value" : null
    }, {
      "name" : "googleCloudConfig.create",
      "value" : false
    }, {
      "name" : "googleCloudConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "googleCloudConfig.version",
      "value" : "1.4-ubuntu18"
    }, {
      "name" : "googleCloudConfig.masterType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.workerType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.networkType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.network",
      "value" : null
    }, {
      "name" : "googleCloudConfig.subnet",
      "value" : null
    }, {
      "name" : "googleCloudConfig.tags",
      "value" : [ ]
    }, {
      "name" : "googleCloudConfig.workerCount",
      "value" : 2
    }, {
      "name" : "googleCloudConfig.clusterName",
      "value" : null
    }, {
      "name" : "googleCloudConfig.terminate",
      "value" : false
    }, {
      "name" : "googleCloudCredentialsConfig.projectId",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.credentialsProvider",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.path",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.credentialsFileContent",
      "value" : null
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget::1"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "testOriginStage",
      "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
    }, {
      "name" : "clusterConfig.sparkAppName",
      "value" : "${pipeline:title()}"
    }, {
      "name" : "clusterConfig.useYarnKerberosKeytab",
      "value" : false
    }, {
      "name" : "clusterConfig.yarnKerberosKeytabSource",
      "value" : "PROPERTIES_FILE"
    }, {
      "name" : "clusterConfig.yarnKerberosKeytab",
      "value" : null
    }, {
      "name" : "clusterConfig.yarnKerberosPrincipal",
      "value" : "name@DOMAIN"
    }, {
      "name" : "transformerEMRConfig.emrVersion",
      "value" : null
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : "3000",
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : false,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "fragments" : [ ],
    "stages" : [ {
      "instanceName" : "UDPSource_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_udp_UDPDSource",
      "stageVersion" : "4",
      "configuration" : [ {
        "name" : "conf.ports",
        "value" : [ "30005" ]
      }, {
        "name" : "conf.enableEpoll",
        "value" : false
      }, {
        "name" : "conf.numThreads",
        "value" : 1
      }, {
        "name" : "conf.dataFormat",
        "value" : "RAW_DATA"
      }, {
        "name" : "conf.batchSize",
        "value" : 1000
      }, {
        "name" : "conf.maxWaitTime",
        "value" : 1000
      }, {
        "name" : "conf.syslogCharset",
        "value" : "UTF-8"
      }, {
        "name" : "conf.typesDbPath",
        "value" : null
      }, {
        "name" : "conf.convertTime",
        "value" : false
      }, {
        "name" : "conf.excludeInterval",
        "value" : true
      }, {
        "name" : "conf.authFilePath",
        "value" : null
      }, {
        "name" : "conf.collectdCharset",
        "value" : "UTF-8"
      }, {
        "name" : "conf.netflowOutputValuesMode",
        "value" : "RAW_AND_INTERPRETED"
      }, {
        "name" : "conf.maxTemplateCacheSize",
        "value" : -1
      }, {
        "name" : "conf.templateCacheTimeoutMs",
        "value" : -1
      }, {
        "name" : "conf.rawDataMode",
        "value" : "CHARACTER"
      }, {
        "name" : "conf.rawDataCharset",
        "value" : "UTF-8"
      }, {
        "name" : "conf.rawDataOutputField",
        "value" : "/data"
      }, {
        "name" : "conf.rawDataMultipleValuesBehavior",
        "value" : "FIRST_ONLY"
      }, {
        "name" : "conf.rawDataSeparatorBytes",
        "value" : "\\u000A"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "yPos" : 38.8380069732666,
        "stageType" : "SOURCE",
        "icon" : "udp.png",
        "description" : "",
        "label" : "UDP-30005",
        "xPos" : -815.6806335449219
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "UDPSource_01OutputLane17298162306600" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "StreamSelector_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_selector_SelectorDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "lanePredicates",
        "value" : [ {
          "outputLane" : "StreamSelector_01OutputLane1729816292825",
          "predicate" : "${str:trim(record:value('/data'))==''}"
        }, {
          "outputLane" : "StreamSelector_01OutputLane1729816282831",
          "predicate" : "default"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 36.25,
        "stageType" : "PROCESSOR",
        "icon" : "laneSelector.png",
        "description" : "",
        "label" : "Stream Selector 1",
        "xPos" : -610.6806182861328
      },
      "inputLanes" : [ "UDPSource_01OutputLane17298162306600" ],
      "outputLanes" : [ "StreamSelector_01OutputLane1729816292825", "StreamSelector_01OutputLane1729816282831" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Trash_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_NullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "yPos" : -32.5,
        "stageType" : "TARGET",
        "icon" : "trash.png",
        "description" : "",
        "label" : "Trash 1",
        "xPos" : -356.9306182861328
      },
      "inputLanes" : [ "StreamSelector_01OutputLane1729816292825" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "ExpressionEvaluator_07",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/deviceAddress",
          "expression" : "${str:regExCapture(record:attribute('UDP_Sender'),'.(.+):',1)}"
        }, {
          "fieldToSet" : "/rawEvent",
          "expression" : "${record:value('/data')}"
        }, {
          "fieldToSet" : "/eventCount",
          "expression" : "1"
        }, {
          "fieldToSet" : "/collectorSeverity",
          "expression" : "${str:regExCapture(record:attribute('UDP_Recipient'),'.+:(.+)',1)}"
        }, {
          "fieldToSet" : "/eventStartTime",
          "expression" : "${time:dateTimeToMilliseconds( time:now())}"
        }, {
          "fieldToSet" : "/rawEventLength",
          "expression" : "${str:length(record:value('/rawEvent'))}"
        }, {
          "fieldToSet" : "/eventId",
          "expression" : "${uuid:uuid()}"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ { } ]
      }, {
        "name" : "fieldAttributeConfigs",
        "value" : [ {
          "fieldToSet" : "/"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 111.25,
        "stageType" : "PROCESSOR",
        "icon" : "expression.png",
        "description" : "",
        "label" : "Expression Evaluator 2",
        "xPos" : -370.6806182861328
      },
      "inputLanes" : [ "StreamSelector_01OutputLane1729816282831" ],
      "outputLanes" : [ "ExpressionEvaluator_07OutputLane17298163100380" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldRemover_04",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fieldfilter_FieldFilterDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "filterOperation",
        "value" : "REMOVE"
      }, {
        "name" : "fields",
        "value" : [ "/data" ]
      }, {
        "name" : "constant",
        "value" : null
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "PROCESSOR",
        "icon" : "filter.png",
        "description" : "",
        "label" : "Field Remover 3",
        "xPos" : -126.93063354492188
      },
      "inputLanes" : [ "ExpressionEvaluator_07OutputLane17298163100380" ],
      "outputLanes" : [ "FieldRemover_04OutputLane17298163732550" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "RedisLookupProcessor_01",
      "library" : "streamsets-datacollector-redis-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_kv_redis_RedisLookupDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "conf.uri",
        "value" : "redis://redis-master-cs:6379"
      }, {
        "name" : "conf.connectionTimeout",
        "value" : 60
      }, {
        "name" : "conf.mode",
        "value" : "BATCH"
      }, {
        "name" : "conf.lookups",
        "value" : [ {
          "dataType" : "HASH",
          "keyExpr" : "${str:concat(\"ip_\",str:concat(record:value('/deviceAddress'),record:value('/collectorSeverity')))}",
          "outputFieldPath" : "/device_assets"
        } ]
      }, {
        "name" : "conf.cache.enabled",
        "value" : false
      }, {
        "name" : "conf.cache.maxSize",
        "value" : -1
      }, {
        "name" : "conf.cache.evictionPolicyType",
        "value" : null
      }, {
        "name" : "conf.cache.expirationTime",
        "value" : 1
      }, {
        "name" : "conf.cache.timeUnit",
        "value" : "SECONDS"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 51.25,
        "stageType" : "PROCESSOR",
        "icon" : "redis.png",
        "description" : "",
        "label" : "Redis Lookup Processor 1",
        "xPos" : 85.30006408691406
      },
      "inputLanes" : [ "FieldRemover_04OutputLane17298163732550" ],
      "outputLanes" : [ "RedisLookupProcessor_01OutputLane17298166169210" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "ExpressionEvaluator_08",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/tenantId",
          "expression" : "${record:value('/device_assets/tenant_no')==NULL ? 1 : record:value('/device_assets/tenant_no')}"
        }, {
          "fieldToSet" : "/tenantName",
          "expression" : "${record:value('/device_assets/tenant_name')==NULL ? '융합보안관제센터' : record:value('/device_assets/tenant_name')}"
        }, {
          "fieldToSet" : "/domainId",
          "expression" : "${record:value('/device_assets/dmn_no')==NULL ? 32 : record:value('/device_assets/dmn_no')}"
        }, {
          "fieldToSet" : "/domainName",
          "expression" : "${record:value('/device_assets/dmn_name')==NULL ? '미확인자산' : record:value('/device_assets/dmn_name')}"
        }, {
          "fieldToSet" : "/customerId",
          "expression" : "${record:value('/device_assets/custm_no')==NULL ? 2 : record:value('/device_assets/custm_no')}"
        }, {
          "fieldToSet" : "/assetsId",
          "expression" : "${record:value('/device_assets/assetsid')==NULL ? 999999 : record:value('/device_assets/assetsid')}"
        }, {
          "fieldToSet" : "/deviceVendor",
          "expression" : "${record:value('/device_assets/equip_vendor_name')==NULL ? record:value('/deviceVendor') : record:value('/device_assets/equip_vendor_name')}"
        }, {
          "fieldToSet" : "/deviceProcessName",
          "expression" : "${record:value('/device_assets/comm_code_name')==NULL ? record:value('/deviceProcessName') : record:value('/device_assets/comm_code_name')}"
        }, {
          "fieldToSet" : "/deviceProduct",
          "expression" : "${record:value('/device_assets/equip_model_name')==NULL ? record:value('/deviceProduct') : record:value('/device_assets/equip_model_name')}"
        }, {
          "fieldToSet" : "/deviceZoneId",
          "expression" : "${record:value('/device_assets/zone_id')==NULL ? record:value('/deviceZoneId') : record:value('/device_assets/zone_id')}"
        }, {
          "fieldToSet" : "/deviceLocationMap",
          "expression" : "${record:value('/device_assets/flr_area_map_name')==NULL ? record:value('/deviceLocationMap') : record:value('/device_assets/flr_area_map_name')}"
        }, {
          "fieldToSet" : "/deviceLocationArea",
          "expression" : "${record:value('/device_assets/flr_area_name')==NULL ? record:value('/deviceLocationArea') : record:value('/device_assets/flr_area_name')}"
        }, {
          "fieldToSet" : "/deviceLocationFloor",
          "expression" : "${record:value('/device_assets/flr_name')==NULL ? record:value('/deviceLocationFloor') : record:value('/device_assets/flr_name')}"
        }, {
          "fieldToSet" : "/deviceLocationBuilding",
          "expression" : "${record:value('/device_assets/bild_name')==NULL ? record:value('/deviceLocationBuilding') : record:value('/device_assets/bild_name')}"
        }, {
          "fieldToSet" : "/deviceLocationSite",
          "expression" : "${record:value('/device_assets/site_name')==NULL ? record:value('/deviceLocationSite') : record:value('/device_assets/site_name')}"
        }, {
          "fieldToSet" : "/providerId",
          "expression" : "${record:value('/device_assets/prvdr_no')==NULL ? record:value('/providerId') : record:value('/device_assets/prvdr_no')}"
        }, {
          "fieldToSet" : "/deviceHostName",
          "expression" : "${record:value('/device_assets/hosts')==NULL ? record:value('/deviceHostName') : record:value('/device_assets/hosts')}"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ { } ]
      }, {
        "name" : "fieldAttributeConfigs",
        "value" : [ {
          "fieldToSet" : "/"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 53.75,
        "stageType" : "PROCESSOR",
        "icon" : "expression.png",
        "description" : "",
        "label" : "Asset Info",
        "xPos" : 280.30006408691406
      },
      "inputLanes" : [ "RedisLookupProcessor_01OutputLane17298166169210" ],
      "outputLanes" : [ "ExpressionEvaluator_08OutputLane17298166555890" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "ExpressionEvaluator_04",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/collectorId",
          "expression" : "${sdc:hostname()}"
        }, {
          "fieldToSet" : "/collectorAddress",
          "expression" : "10.90.32.33"
        }, {
          "fieldToSet" : "/collectorSeverity",
          "expression" : "0"
        }, {
          "fieldToSet" : "/collectorTimeZone",
          "expression" : "UTC"
        }, {
          "fieldToSet" : "/collectorTimeZoneOffset",
          "expression" : "0"
        }, {
          "fieldToSet" : "/collectorReceiptTime",
          "expression" : "${time:dateTimeToMilliseconds(time:now())}"
        }, {
          "fieldToSet" : "/collectorVersion",
          "expression" : "3.16.2"
        }, {
          "fieldToSet" : "/applicationProtocol",
          "expression" : "${record:exists('/applicationProtocol') ? record:value('/applicationProtocol') : 'UDP/UTM-Axgate'}"
        }, {
          "fieldToSet" : "/eventReason",
          "expression" : "미등록자산로그"
        }, {
          "fieldToSet" : "/deviceAction",
          "expression" : "미등록자산로그"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ { } ]
      }, {
        "name" : "fieldAttributeConfigs",
        "value" : [ {
          "fieldToSet" : "/"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "collector info & eventReason",
        "xPos" : 496,
        "yPos" : 53,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "ExpressionEvaluator_08OutputLane17298166555890" ],
      "outputLanes" : [ "ExpressionEvaluator_04OutputLane15567725240370" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "ExpressionEvaluator_05",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/eventId",
          "expression" : "${record:exists('/eventId') ? record:value('/eventId') : '0'}"
        }, {
          "fieldToSet" : "/eventCategory",
          "expression" : "${str:toUpper(record:exists('/eventCategory') ? record:value('/eventCategory') : '')}"
        }, {
          "fieldToSet" : "/eventStartTime",
          "expression" : "${record:exists('/eventStartTime') ? (record:value('/eventStartTime') == null || record:value('/eventStartTime') == '' ? 0 : record:value('/eventStartTime')) : 0}"
        }, {
          "fieldToSet" : "/eventEndTime",
          "expression" : "${record:exists('/eventEndTime') ? (record:value('/eventEndTime') == null || record:value('/eventEndTime') == '' ? 0 : record:value('/eventEndTime')) : 0}"
        }, {
          "fieldToSet" : "/eventClassId",
          "expression" : "${str:toUpper(record:exists('/eventClassId') ? record:value('/eventClassId') : '')}"
        }, {
          "fieldToSet" : "/eventName",
          "expression" : "${str:toUpper(record:exists('/eventName') ? record:value('/eventName') : '')}"
        }, {
          "fieldToSet" : "/eventType",
          "expression" : "${record:exists('/eventType') ? (record:value('/eventType') == null || record:value('/eventType') == '' ? 0 : record:value('/eventType')) : 0}"
        }, {
          "fieldToSet" : "/eventReason",
          "expression" : "${str:toUpper(record:exists('/eventReason') ? record:value('/eventReason') : '')}"
        }, {
          "fieldToSet" : "/eventOutcome",
          "expression" : "${str:toUpper(record:exists('/eventOutcome') ? record:value('/eventOutcome') : '')}"
        }, {
          "fieldToSet" : "/eventCount",
          "expression" : "${record:exists('/eventCount') ? (record:value('/eventCount') == null || record:value('/eventCount') == '' ? 1 : record:value('/eventCount')) : 1}"
        }, {
          "fieldToSet" : "/eventRiskLevel",
          "expression" : "${record:exists('/eventRiskLevel') ? (record:value('/eventRiskLevel') == null || record:value('/eventRiskLevel') == '' ? 0 : record:value('/eventRiskLevel')) : 0}"
        }, {
          "fieldToSet" : "/eventRiskScore",
          "expression" : "${record:exists('/eventRiskScore') ? (record:value('/eventRiskScore') == null || record:value('/eventRiskScore') == '' ? 0 : record:value('/eventRiskScore')) : 0}"
        }, {
          "fieldToSet" : "/customerId",
          "expression" : "${record:exists('/customerId') ? (record:value('/customerId') == null || record:value('/customerId') == '' ? 0 : record:value('/customerId')) : 0}"
        }, {
          "fieldToSet" : "/providerId",
          "expression" : "${record:exists('/providerId') ? (record:value('/providerId') == null || record:value('/providerId') == '' ? 0 : record:value('/providerId')) : 0}"
        }, {
          "fieldToSet" : "/tenantId",
          "expression" : "${record:exists('/tenantId') ? (record:value('/tenantId') == null || record:value('/tenantId') == '' ? 0 : record:value('/tenantId')) : 0}"
        }, {
          "fieldToSet" : "/tenantName",
          "expression" : "${str:toUpper(record:exists('/tenantName') ? record:value('/tenantName') : '')}"
        }, {
          "fieldToSet" : "/domainId",
          "expression" : "${record:exists('/domainId') ? (record:value('/domainId') == null || record:value('/domainId') == '' ? 0 : record:value('/domainId')) : 0}"
        }, {
          "fieldToSet" : "/domainName",
          "expression" : "${str:toUpper(record:exists('/domainName') ? record:value('/domainName') : '')}"
        }, {
          "fieldToSet" : "/bytesIn",
          "expression" : "${record:exists('/bytesIn') ? (record:value('/bytesIn') == null || record:value('/bytesIn') == '' ? 0 : record:value('/bytesIn')) : 0}"
        }, {
          "fieldToSet" : "/bytesOut",
          "expression" : "${record:exists('/bytesOut') ? (record:value('/bytesOut') == null || record:value('/bytesOut') == '' ? 0 : record:value('/bytesOut')) : 0}"
        }, {
          "fieldToSet" : "/applicationProtocol",
          "expression" : "${str:toUpper(record:exists('/applicationProtocol') ? record:value('/applicationProtocol') : '')}"
        }, {
          "fieldToSet" : "/rawEventLength",
          "expression" : "${record:exists('/rawEventLength') ? (record:value('/rawEventLength') == null || record:value('/rawEventLength') == '' ? 0 : record:value('/rawEventLength')) : 0}"
        }, {
          "fieldToSet" : "/baseEventLength",
          "expression" : "${record:exists('/baseEventLength') ? (record:value('/baseEventLength') == null || record:value('/baseEventLength') == '' ? 0 : record:value('/baseEventLength')) : 0}"
        }, {
          "fieldToSet" : "/collectorAddress",
          "expression" : "${record:exists('/collectorAddress') ? record:value('/collectorAddress') : '0.0.0.0'}"
        }, {
          "fieldToSet" : "/collectorSeverity",
          "expression" : "${record:exists('/collectorSeverity') ? (record:value('/collectorSeverity') == null || record:value('/collectorSeverity') == '' ? 0 : record:value('/collectorSeverity')) : 0}"
        }, {
          "fieldToSet" : "/collectorType",
          "expression" : "${str:toUpper(record:exists('/collectorType') ? record:value('/collectorType') : '')}"
        }, {
          "fieldToSet" : "/collectorTimeZone",
          "expression" : "${str:toUpper(record:exists('/collectorTimeZone') ? record:value('/collectorTimeZone') : '')}"
        }, {
          "fieldToSet" : "/collectorTimeZoneOffset",
          "expression" : "${record:exists('/collectorTimeZoneOffset') ? (record:value('/collectorTimeZoneOffset') == null || record:value('/collectorTimeZoneOffset') == '' ? 0 : record:value('/collectorTimeZoneOffset')) : 0}"
        }, {
          "fieldToSet" : "/collectorReceiptTime",
          "expression" : "${record:exists('/collectorReceiptTime') ? (record:value('/collectorReceiptTime') == null || record:value('/collectorReceiptTime') == '' ? 0 : record:value('/collectorReceiptTime')) : 0}"
        }, {
          "fieldToSet" : "/collectorVersion",
          "expression" : "${str:toUpper(record:exists('/collectorVersion') ? record:value('/collectorVersion') : '')}"
        }, {
          "fieldToSet" : "/collectorId",
          "expression" : "${record:exists('/collectorId') ? record:value('/collectorId') : ''}"
        }, {
          "fieldToSet" : "/ruleEngineId",
          "expression" : "${record:exists('/ruleEngineId') ? (record:value('/ruleEngineId') == null || record:value('/ruleEngineId') == '' ? 0 : record:value('/ruleEngineId')) : 0}"
        }, {
          "fieldToSet" : "/ruleEngineAddress",
          "expression" : "${record:exists('/ruleEngineAddress') ? record:value('/ruleEngineAddress') : '0.0.0.0'}"
        }, {
          "fieldToSet" : "/ruleEngineVersion",
          "expression" : "${str:toUpper(record:exists('/ruleEngineVersion') ? record:value('/ruleEngineVersion') : '')}"
        }, {
          "fieldToSet" : "/destinationAddress",
          "expression" : "${record:exists('/destinationAddress') ? record:value('/destinationAddress') : '0.0.0.0'}"
        }, {
          "fieldToSet" : "/destinationCountryCode",
          "expression" : "${str:toUpper(record:exists('/destinationCountryCode') ? record:value('/destinationCountryCode') : '')}"
        }, {
          "fieldToSet" : "/destinationDnsDomain",
          "expression" : "${str:toUpper(record:exists('/destinationDnsDomain') ? record:value('/destinationDnsDomain') : '')}"
        }, {
          "fieldToSet" : "/destinationHostName",
          "expression" : "${str:toUpper(record:exists('/destinationHostName') ? record:value('/destinationHostName') : '')}"
        }, {
          "fieldToSet" : "/destinationMacAddress",
          "expression" : "${str:toUpper(record:exists('/destinationMacAddress') ? record:value('/destinationMacAddress') : '')}"
        }, {
          "fieldToSet" : "/destinationNtDomain",
          "expression" : "${str:toUpper(record:exists('/destinationNtDomain') ? record:value('/destinationNtDomain') : '')}"
        }, {
          "fieldToSet" : "/destinationPort",
          "expression" : "${record:exists('/destinationPort') ? (record:value('/destinationPort') == null || record:value('/destinationPort') == '' ? 0 : record:value('/destinationPort')) : 0}"
        }, {
          "fieldToSet" : "/destinationProcessId",
          "expression" : "${record:exists('/destinationProcessId') ? (record:value('/destinationProcessId') == null || record:value('/destinationProcessId') == '' ? 0 : record:value('/destinationProcessId')) : 0}"
        }, {
          "fieldToSet" : "/destinationProcessName",
          "expression" : "${str:toUpper(record:exists('/destinationProcessName') ? record:value('/destinationProcessName') : '')}"
        }, {
          "fieldToSet" : "/destinationServiceName",
          "expression" : "${str:toUpper(record:exists('/destinationServiceName') ? record:value('/destinationServiceName') : '')}"
        }, {
          "fieldToSet" : "/destinationTranslatedAddress",
          "expression" : "${record:exists('/destinationTranslatedAddress') ? record:value('/destinationTranslatedAddress') : '0.0.0.0'}"
        }, {
          "fieldToSet" : "/destinationTranslatedPort",
          "expression" : "${record:exists('/destinationTranslatedPort') ? (record:value('/destinationTranslatedPort') == null || record:value('/destinationTranslatedPort') == '' ? 0 : record:value('/destinationTranslatedPort')) : 0}"
        }, {
          "fieldToSet" : "/destinationUserId",
          "expression" : "${str:toUpper(record:exists('/destinationUserId') ? record:value('/destinationUserId') : 0)}"
        }, {
          "fieldToSet" : "/destinationUserName",
          "expression" : "${str:toUpper(record:exists('/destinationUserName') ? record:value('/destinationUserName') : '')}"
        }, {
          "fieldToSet" : "/destinationUserPrivileges",
          "expression" : "${str:toUpper(record:exists('/destinationUserPrivileges') ? record:value('/destinationUserPrivileges') : '')}"
        }, {
          "fieldToSet" : "/destinationZoneId",
          "expression" : "${str:toUpper(record:exists('/destinationZoneId') ? record:value('/destinationZoneId') : '')}"
        }, {
          "fieldToSet" : "/destinationLocationSite",
          "expression" : "${str:toUpper(record:exists('/destinationLocationSite') ? record:value('/destinationLocationSite') : '')}"
        }, {
          "fieldToSet" : "/destinationLocationBuilding",
          "expression" : "${str:toUpper(record:exists('/destinationLocationBuilding') ? record:value('/destinationLocationBuilding') : '')}"
        }, {
          "fieldToSet" : "/destinationLocationFloor",
          "expression" : "${str:toUpper(record:exists('/destinationLocationFloor') ? record:value('/destinationLocationFloor') : '')}"
        }, {
          "fieldToSet" : "/destinationLocationArea",
          "expression" : "${str:toUpper(record:exists('/destinationLocationArea') ? record:value('/destinationLocationArea') : '')}"
        }, {
          "fieldToSet" : "/destinationLocationMap",
          "expression" : "${str:toUpper(record:exists('/destinationLocationMap') ? record:value('/destinationLocationMap') : '')}"
        }, {
          "fieldToSet" : "/assetsId",
          "expression" : "${record:exists('/assetsId') ? (record:value('/assetsId') == null || record:value('/assetsId') == '' ? 0 : record:value('/assetsId')) : 0}"
        }, {
          "fieldToSet" : "/deviceAction",
          "expression" : "${str:toUpper(record:exists('/deviceAction') ? record:value('/deviceAction') : '')}"
        }, {
          "fieldToSet" : "/deviceAddress",
          "expression" : "${record:exists('/deviceAddress') ? record:value('/deviceAddress') : '0.0.0.0'}"
        }, {
          "fieldToSet" : "/deviceCustomDate1",
          "expression" : "${record:exists('/deviceCustomDate1') ? (record:value('/deviceCustomDate1') == null || record:value('/deviceCustomDate1') == '' ? 0 : record:value('/deviceCustomDate1')) : 0}"
        }, {
          "fieldToSet" : "/deviceCustomDate1Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomDate1Label') ? record:value('/deviceCustomDate1Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomDate2",
          "expression" : "${record:exists('/deviceCustomDate2') ? (record:value('/deviceCustomDate2') == null || record:value('/deviceCustomDate2') == '' ? 0 : record:value('/deviceCustomDate2')) : 0}"
        }, {
          "fieldToSet" : "/deviceCustomDate2Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomDate2Label') ? record:value('/deviceCustomDate2Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomNumber1",
          "expression" : "${record:exists('/deviceCustomNumber1') ? (record:value('/deviceCustomNumber1') == null || record:value('/deviceCustomNumber1') == '' ? 0 : record:value('/deviceCustomNumber1')) : 0}"
        }, {
          "fieldToSet" : "/deviceCustomNumber1Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomNumber1Label') ? record:value('/deviceCustomNumber1Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomNumber2",
          "expression" : "${record:exists('/deviceCustomNumber2') ? (record:value('/deviceCustomNumber2') == null || record:value('/deviceCustomNumber2') == '' ? 0 : record:value('/deviceCustomNumber2')) : 0}"
        }, {
          "fieldToSet" : "/deviceCustomNumber2Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomNumber2Label') ? record:value('/deviceCustomNumber2Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomNumber3",
          "expression" : "${record:exists('/deviceCustomNumber3') ? (record:value('/deviceCustomNumber3') == null || record:value('/deviceCustomNumber3') == '' ? 0 : record:value('/deviceCustomNumber3')) : 0}"
        }, {
          "fieldToSet" : "/deviceCustomNumber3Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomNumber3Label') ? record:value('/deviceCustomNumber3Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString1",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString1') ? record:value('/deviceCustomString1') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString1Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString1Label') ? record:value('/deviceCustomString1Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString2",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString2') ? record:value('/deviceCustomString2') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString2Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString2Label') ? record:value('/deviceCustomString2Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString3",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString3') ? record:value('/deviceCustomString3') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString3Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString3Label') ? record:value('/deviceCustomString3Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString4",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString4') ? record:value('/deviceCustomString4') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString4Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString4Label') ? record:value('/deviceCustomString4Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString5",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString5') ? record:value('/deviceCustomString5') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString5Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString5Label') ? record:value('/deviceCustomString5Label') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString6",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString6') ? record:value('/deviceCustomString6') : '')}"
        }, {
          "fieldToSet" : "/deviceCustomString6Label",
          "expression" : "${str:toUpper(record:exists('/deviceCustomString6Label') ? record:value('/deviceCustomString6Label') : '')}"
        }, {
          "fieldToSet" : "/deviceDirection",
          "expression" : "${str:toUpper(record:exists('/deviceDirection') ? (record:value('/deviceDirection') == null || record:value('/deviceDirection') == '' ? 0 : record:value('/deviceDirection')) : 0)}"
        }, {
          "fieldToSet" : "/deviceDnsDomain",
          "expression" : "${str:toUpper(record:exists('/deviceDnsDomain') ? record:value('/deviceDnsDomain') : '')}"
        }, {
          "fieldToSet" : "/deviceFacility",
          "expression" : "${str:toUpper(record:exists('/deviceFacility') ? record:value('/deviceFacility') : '')}"
        }, {
          "fieldToSet" : "/deviceHostName",
          "expression" : "${str:toUpper(record:exists('/deviceHostName') ? record:value('/deviceHostName') : '')}"
        }, {
          "fieldToSet" : "/deviceInboundInterface",
          "expression" : "${str:toUpper(record:exists('/deviceInboundInterface') ? record:value('/deviceInboundInterface') : '')}"
        }, {
          "fieldToSet" : "/deviceMacAddress",
          "expression" : "${str:toUpper(record:exists('/deviceMacAddress') ? record:value('/deviceMacAddress') : '')}"
        }, {
          "fieldToSet" : "/deviceNtDomain",
          "expression" : "${str:toUpper(record:exists('/deviceNtDomain') ? record:value('/deviceNtDomain') : '')}"
        }, {
          "fieldToSet" : "/deviceOutboundInterface",
          "expression" : "${str:toUpper(record:exists('/deviceOutboundInterface') ? record:value('/deviceOutboundInterface') : '')}"
        }, {
          "fieldToSet" : "/deviceProduct",
          "expression" : "${str:toUpper(record:exists('/deviceProduct') ? record:value('/deviceProduct') : '')}"
        }, {
          "fieldToSet" : "/devicePayloadId",
          "expression" : "${str:toUpper(record:exists('/devicePayloadId') ? record:value('/devicePayloadId') : '')}"
        }, {
          "fieldToSet" : "/deviceProcessId",
          "expression" : "${str:toUpper(record:exists('/deviceProcessId') ? (record:value('/deviceProcessId') == null || record:value('/deviceProcessId') == '' ? 0 : record:value('/deviceProcessId')) : 0)}"
        }, {
          "fieldToSet" : "/deviceProcessName",
          "expression" : "${str:toUpper(record:exists('/deviceProcessName') ? record:value('/deviceProcessName') : '')}"
        }, {
          "fieldToSet" : "/deviceReceiptTime",
          "expression" : "${record:exists('/deviceReceiptTime') ? (record:value('/deviceReceiptTime') == null || record:value('/deviceReceiptTime') == '' ? 0 : record:value('/deviceReceiptTime')) : 0}"
        }, {
          "fieldToSet" : "/deviceTimeFormat",
          "expression" : "${str:toUpper(record:exists('/deviceTimeFormat') ? record:value('/deviceTimeFormat') : '')}"
        }, {
          "fieldToSet" : "/deviceTimeZone",
          "expression" : "${str:toUpper(record:exists('/deviceTimeZone') ? record:value('/deviceTimeZone') : '')}"
        }, {
          "fieldToSet" : "/deviceTranslatedAddress",
          "expression" : "${record:exists('/deviceTranslatedAddress') ? record:value('/deviceTranslatedAddress') : '0.0.0.0'}"
        }, {
          "fieldToSet" : "/deviceSeverity",
          "expression" : "${record:exists('/deviceSeverity') ? (record:value('/deviceSeverity') == null || record:value('/deviceSeverity') == '' ? 0 : record:value('/deviceSeverity')) : 0}"
        }, {
          "fieldToSet" : "/deviceVendor",
          "expression" : "${str:toUpper(record:exists('/deviceVendor') ? record:value('/deviceVendor') : '')}"
        }, {
          "fieldToSet" : "/deviceVersion",
          "expression" : "${str:toUpper(record:exists('/deviceVersion') ? record:value('/deviceVersion') : '')}"
        }, {
          "fieldToSet" : "/deviceZoneId",
          "expression" : "${str:toUpper(record:exists('/deviceZoneId') ? record:value('/deviceZoneId') : '')}"
        }, {
          "fieldToSet" : "/deviceLocationSite",
          "expression" : "${str:toUpper(record:exists('/deviceLocationSite') ? record:value('/deviceLocationSite') : '')}"
        }, {
          "fieldToSet" : "/deviceLocationBuilding",
          "expression" : "${str:toUpper(record:exists('/deviceLocationBuilding') ? record:value('/deviceLocationBuilding') : '')}"
        }, {
          "fieldToSet" : "/deviceLocationFloor",
          "expression" : "${str:toUpper(record:exists('/deviceLocationFloor') ? record:value('/deviceLocationFloor') : '')}"
        }, {
          "fieldToSet" : "/deviceLocationArea",
          "expression" : "${str:toUpper(record:exists('/deviceLocationArea') ? record:value('/deviceLocationArea') : '')}"
        }, {
          "fieldToSet" : "/deviceLocationMap",
          "expression" : "${str:toUpper(record:exists('/deviceLocationMap') ? record:value('/deviceLocationMap') : '')}"
        }, {
          "fieldToSet" : "/fileCreateTime",
          "expression" : "${record:exists('/fileCreateTime') ? (record:value('/fileCreateTime') == null || record:value('/fileCreateTime') == '' ? 0 : record:value('/fileCreateTime')) : 0}"
        }, {
          "fieldToSet" : "/fileHash",
          "expression" : "${str:toUpper(record:exists('/fileHash') ? record:value('/fileHash') : '')}"
        }, {
          "fieldToSet" : "/fileId",
          "expression" : "${str:toUpper(record:exists('/fileId') ? record:value('/fileId') : '')}"
        }, {
          "fieldToSet" : "/fileModificationTime",
          "expression" : "${record:exists('/fileModificationTime') ? (record:value('/fileModificationTime') == null || record:value('/fileModificationTime') == '' ? 0 : record:value('/fileModificationTime')) : 0}"
        }, {
          "fieldToSet" : "/fileName",
          "expression" : "${str:toUpper(record:exists('/fileName') ? record:value('/fileName') : '')}"
        }, {
          "fieldToSet" : "/filePath",
          "expression" : "${str:toUpper(record:exists('/filePath') ? record:value('/filePath') : '')}"
        }, {
          "fieldToSet" : "/filePermission",
          "expression" : "${str:toUpper(record:exists('/filePermission') ? record:value('/filePermission') : '')}"
        }, {
          "fieldToSet" : "/fileSize",
          "expression" : "${record:exists('/fileSize') ? (record:value('/fileSize') == null || record:value('/fileSize') == '' ? 0 : record:value('/fileSize')) : 0}"
        }, {
          "fieldToSet" : "/fileType",
          "expression" : "${str:toUpper(record:exists('/fileType') ? record:value('/fileType') : '')}"
        }, {
          "fieldToSet" : "/flexDate1",
          "expression" : "${record:exists('/flexDate1') ? (record:value('/flexDate1') == null || record:value('/flexDate1') == '' ? 0 : record:value('/flexDate1')) : 0}"
        }, {
          "fieldToSet" : "/flexDate1Label",
          "expression" : "${str:toUpper(record:exists('/flexDate1Label') ? record:value('/flexDate1Label') : '')}"
        }, {
          "fieldToSet" : "/flexDate2",
          "expression" : "${record:exists('/flexDate2') ? (record:value('/flexDate2') == null || record:value('/flexDate2') == '' ? 0 : record:value('/flexDate2')) : 0}"
        }, {
          "fieldToSet" : "/flexDate2Label",
          "expression" : "${str:toUpper(record:exists('/flexDate2Label') ? record:value('/flexDate2Label') : '')}"
        }, {
          "fieldToSet" : "/flexDate3",
          "expression" : "${record:exists('/flexDate3') ? (record:value('/flexDate3') == null || record:value('/flexDate3') == '' ? 0 : record:value('/flexDate3')) : 0}"
        }, {
          "fieldToSet" : "/flexDate3Label",
          "expression" : "${str:toUpper(record:exists('/flexDate3Label') ? record:value('/flexDate3Label') : '')}"
        }, {
          "fieldToSet" : "/flexDate4",
          "expression" : "${record:exists('/flexDate4') ? (record:value('/flexDate4') == null || record:value('/flexDate4') == '' ? 0 : record:value('/flexDate4')) : 0}"
        }, {
          "fieldToSet" : "/flexDate4Label",
          "expression" : "${str:toUpper(record:exists('/flexDate4Label') ? record:value('/flexDate4Label') : '')}"
        }, {
          "fieldToSet" : "/flexNumber1",
          "expression" : "${record:exists('/flexNumber1') ? (record:value('/flexNumber1') == null || record:value('/flexNumber1') == '' ? 0 : record:value('/flexNumber1')) : 0}"
        }, {
          "fieldToSet" : "/flexNumber1Label",
          "expression" : "${str:toUpper(record:exists('/flexNumber1Label') ? record:value('/flexNumber1Label') : '')}"
        }, {
          "fieldToSet" : "/flexNumber2",
          "expression" : "${record:exists('/flexNumber2') ? (record:value('/flexNumber2') == null || record:value('/flexNumber2') == '' ? 0 : record:value('/flexNumber2')) : 0}"
        }, {
          "fieldToSet" : "/flexNumber2Label",
          "expression" : "${str:toUpper(record:exists('/flexNumber2Label') ? record:value('/flexNumber2Label') : '')}"
        }, {
          "fieldToSet" : "/flexString1",
          "expression" : "${str:toUpper(record:exists('/flexString1') ? record:value('/flexString1') : '')}"
        }, {
          "fieldToSet" : "/flexString1Label",
          "expression" : "${str:toUpper(record:exists('/flexString1Label') ? record:value('/flexString1Label') : '')}"
        }, {
          "fieldToSet" : "/flexString2",
          "expression" : "${str:toUpper(record:exists('/flexString2') ? record:value('/flexString2') : '')}"
        }, {
          "fieldToSet" : "/flexString2Label",
          "expression" : "${str:toUpper(record:exists('/flexString2Label') ? record:value('/flexString2Label') : '')}"
        }, {
          "fieldToSet" : "/oldFileCreateTime",
          "expression" : "${record:exists('/oldFileCreateTime') ? (record:value('/oldFileCreateTime') == null || record:value('/oldFileCreateTime') == '' ? 0 : record:value('/oldFileCreateTime')) : 0}"
        }, {
          "fieldToSet" : "/oldFileHash",
          "expression" : "${str:toUpper(record:exists('/oldFileHash') ? record:value('/oldFileHash') : '')}"
        }, {
          "fieldToSet" : "/oldFileId",
          "expression" : "${str:toUpper(record:exists('/oldFileId') ? record:value('/oldFileId') : '')}"
        }, {
          "fieldToSet" : "/oldFileModificationTime",
          "expression" : "${record:exists('/oldFileModificationTime') ? (record:value('/oldFileModificationTime') == null || record:value('/oldFileModificationTime') == '' ? 0 : record:value('/oldFileModificationTime')) : 0}"
        }, {
          "fieldToSet" : "/oldFileName",
          "expression" : "${str:toUpper(record:exists('/oldFileName') ? record:value('/oldFileName') : '')}"
        }, {
          "fieldToSet" : "/oldFilePath",
          "expression" : "${str:toUpper(record:exists('/oldFilePath') ? record:value('/oldFilePath') : '')}"
        }, {
          "fieldToSet" : "/oldFilePermission",
          "expression" : "${str:toUpper(record:exists('/oldFilePermission') ? record:value('/oldFilePermission') : '')}"
        }, {
          "fieldToSet" : "/oldFileSize",
          "expression" : "${record:exists('/oldFileSize') ? (record:value('/oldFileSize') == null || record:value('/oldFileSize') == '' ? 0 : record:value('/oldFileSize')) : 0}"
        }, {
          "fieldToSet" : "/oldFileType",
          "expression" : "${str:toUpper(record:exists('/oldFileType') ? record:value('/oldFileType') : '')}"
        }, {
          "fieldToSet" : "/requestClientApplication",
          "expression" : "${str:toUpper(record:exists('/requestClientApplication') ? record:value('/requestClientApplication') : '')}"
        }, {
          "fieldToSet" : "/requestContext",
          "expression" : "${str:toUpper(record:exists('/requestContext') ? record:value('/requestContext') : '')}"
        }, {
          "fieldToSet" : "/requestCookies",
          "expression" : "${str:toUpper(record:exists('/requestCookies') ? record:value('/requestCookies') : '')}"
        }, {
          "fieldToSet" : "/requestMethod",
          "expression" : "${str:toUpper(record:exists('/requestMethod') ? record:value('/requestMethod') : '')}"
        }, {
          "fieldToSet" : "/requestUrl",
          "expression" : "${str:toUpper(record:exists('/requestUrl') ? record:value('/requestUrl') : '')}"
        }, {
          "fieldToSet" : "/requestUrlFileName",
          "expression" : "${str:toUpper(record:exists('/requestUrlFileName') ? record:value('/requestUrlFileName') : '')}"
        }, {
          "fieldToSet" : "/requestUrlQuery",
          "expression" : "${str:toUpper(record:exists('/requestUrlQuery') ? record:value('/requestUrlQuery') : '')}"
        }, {
          "fieldToSet" : "/sourceAddress",
          "expression" : "${record:exists('/sourceAddress') ? record:value('/sourceAddress') : '0.0.0.0'}"
        }, {
          "fieldToSet" : "/sourceCountryCode",
          "expression" : "${str:toUpper(record:exists('/sourceCountryCode') ? record:value('/sourceCountryCode') : '')}"
        }, {
          "fieldToSet" : "/sourceDnsDomain",
          "expression" : "${str:toUpper(record:exists('/sourceDnsDomain') ? record:value('/sourceDnsDomain') : '')}"
        }, {
          "fieldToSet" : "/sourceHostName",
          "expression" : "${str:toUpper(record:exists('/sourceHostName') ? record:value('/sourceHostName') : '')}"
        }, {
          "fieldToSet" : "/sourceMacAddress",
          "expression" : "${str:toUpper(record:exists('/sourceMacAddress') ? record:value('/sourceMacAddress') : '')}"
        }, {
          "fieldToSet" : "/sourceNtDomain",
          "expression" : "${str:toUpper(record:exists('/sourceNtDomain') ? record:value('/sourceNtDomain') : '')}"
        }, {
          "fieldToSet" : "/sourcePort",
          "expression" : "${record:exists('/sourcePort') ? (record:value('/sourcePort') == null || record:value('/sourcePort') == '' ? 0 : record:value('/sourcePort')) : 0}"
        }, {
          "fieldToSet" : "/sourceTranslatedAddress",
          "expression" : "${record:exists('/sourceTranslatedAddress') ? record:value('/sourceTranslatedAddress') : '0.0.0.0'}"
        }, {
          "fieldToSet" : "/sourceUserId",
          "expression" : "${str:toUpper(record:exists('/sourceUserId') ? record:value('/sourceUserId') : '')}"
        }, {
          "fieldToSet" : "/sourceUserName",
          "expression" : "${str:toUpper(record:exists('/sourceUserName') ? record:value('/sourceUserName') : '')}"
        }, {
          "fieldToSet" : "/sourceUserPrivileges",
          "expression" : "${str:toUpper(record:exists('/sourceUserPrivileges') ? record:value('/sourceUserPrivileges') : '')}"
        }, {
          "fieldToSet" : "/sourceZoneId",
          "expression" : "${str:toUpper(record:exists('/sourceZoneId') ? record:value('/sourceZoneId') : '')}"
        }, {
          "fieldToSet" : "/sourceLocationSite",
          "expression" : "${str:toUpper(record:exists('/sourceLocationSite') ? record:value('/sourceLocationSite') : '')}"
        }, {
          "fieldToSet" : "/sourceLocationBuilding",
          "expression" : "${str:toUpper(record:exists('/sourceLocationBuilding') ? record:value('/sourceLocationBuilding') : '')}"
        }, {
          "fieldToSet" : "/sourceLocationFloor",
          "expression" : "${str:toUpper(record:exists('/sourceLocationFloor') ? record:value('/sourceLocationFloor') : '')}"
        }, {
          "fieldToSet" : "/sourceLocationArea",
          "expression" : "${str:toUpper(record:exists('/sourceLocationArea') ? record:value('/sourceLocationArea') : '')}"
        }, {
          "fieldToSet" : "/sourceLocationMap",
          "expression" : "${str:toUpper(record:exists('/sourceLocationMap') ? record:value('/sourceLocationMap') : '')}"
        }, {
          "fieldToSet" : "/enrichmentTime",
          "expression" : "${time:dateTimeToMilliseconds(time:now())}"
        }, {
          "fieldToSet" : "/hrJobGrade",
          "expression" : "${str:toUpper(record:exists('/hrJobGrade') ? record:value('/hrJobGrade') : '')}"
        }, {
          "fieldToSet" : "/hrIsInOffice",
          "expression" : "${str:toUpper(record:exists('/hrIsInOffice') ? record:value('/hrIsInOffice') : '')}"
        }, {
          "fieldToSet" : "/hrEmployeeNumber",
          "expression" : "${str:toUpper(record:exists('/hrEmployeeNumber') ? record:value('/hrEmployeeNumber') : '')}"
        }, {
          "fieldToSet" : "/hrDepartment",
          "expression" : "${str:toUpper(record:exists('/hrDepartment') ? record:value('/hrDepartment') : '')}"
        }, {
          "fieldToSet" : "/hrEmployeeName",
          "expression" : "${str:toUpper(record:exists('/hrEmployeeName') ? record:value('/hrEmployeeName') : '')}"
        }, {
          "fieldToSet" : "/deviceChannelId",
          "expression" : "${record:exists('/deviceChannelId') ? (record:value('/deviceChannelId') == null || record:value('/deviceChannelId') == '' ? 0 : record:value('/deviceChannelId')) : 0}"
        }, {
          "fieldToSet" : "/deviceChannelName",
          "expression" : "${str:toUpper(record:exists('/deviceChannelName') ? record:value('/deviceChannelName') : '')}"
        }, {
          "fieldToSet" : "/deviceSerial",
          "expression" : "${record:exists('/deviceSerial') ? (record:value('/deviceSerial') == null || record:value('/deviceSerial') == '' ? 0 : record:value('/deviceSerial')) : 0}"
        }, {
          "fieldToSet" : "/deviceServerCode",
          "expression" : "${record:exists('/deviceServerCode') ? (record:value('/deviceServerCode') == null || record:value('/deviceServerCode') == '' ? 0 : record:value('/deviceServerCode')) : 0}"
        }, {
          "fieldToSet" : "/vasEventType",
          "expression" : "${record:exists('/vasEventType') ? (record:value('/vasEventType') == null || record:value('/vasEventType') == '' ? 0 : record:value('/vasEventType')) : 0}"
        }, {
          "fieldToSet" : "/vasName",
          "expression" : "${str:toUpper(record:exists('/vasName') ? record:value('/vasName') : '')}"
        }, {
          "fieldToSet" : "/vasUuid",
          "expression" : "${str:toUpper(record:exists('/vasUuid') ? record:value('/vasUuid') : '')}"
        }, {
          "fieldToSet" : "/vasObject",
          "expression" : "${str:toUpper(record:exists('/vasObject') ? record:value('/vasObject') : '')}"
        }, {
          "fieldToSet" : "/vasAlgorithm",
          "expression" : "${record:exists('/vasAlgorithm') ? (record:value('/vasAlgorithm') == null || record:value('/vasAlgorithm') == '' ? 0 : record:value('/vasAlgorithm')) : 0}"
        }, {
          "fieldToSet" : "/motionId",
          "expression" : "${record:exists('/motionId') ? (record:value('/motionId') == null || record:value('/motionId') == '' ? 0 : record:value('/motionId')) : 0}"
        }, {
          "fieldToSet" : "/motionName",
          "expression" : "${str:toUpper(record:exists('/motionName') ? record:value('/motionName') : '')}"
        }, {
          "fieldToSet" : "/sourceTranslatedPort",
          "expression" : "${record:exists('/sourceTranslatedPort') ? (record:value('/sourceTranslatedPort') == null || record:value('/sourceTranslatedPort') == '' ? 0 : record:value('/sourceTranslatedPort')) : 0}"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ { } ]
      }, {
        "name" : "fieldAttributeConfigs",
        "value" : [ {
          "fieldToSet" : "/"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "set all field",
        "xPos" : 719,
        "yPos" : 50,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "ExpressionEvaluator_04OutputLane15567725240370" ],
      "outputLanes" : [ "ExpressionEvaluator_05OutputLane15567725707400" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldRemover_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fieldfilter_FieldFilterDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "filterOperation",
        "value" : "REMOVE"
      }, {
        "name" : "fields",
        "value" : [ "/device_assets" ]
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      }, {
        "name" : "constant",
        "value" : null
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Field Remover 1",
        "xPos" : 940,
        "yPos" : 50,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "ExpressionEvaluator_05OutputLane15567725707400" ],
      "outputLanes" : [ "FieldRemover_01OutputLane15567726221160" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldTypeConverter_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "convertBy",
        "value" : "BY_FIELD"
      }, {
        "name" : "fieldTypeConverterConfigs",
        "value" : [ {
          "fields" : [ "/eventType", "/eventCount", "/eventRisk*", "/bytes*", "/*Length", "/collectorTimeZoneOffset", "/*Port", "/deviceDirection", "/*ProcessId", "/*Severity", "/*Size", "/vasEventType", "/vasAlgorithm" ],
          "targetType" : "INTEGER",
          "treatInputFieldAsDate" : false,
          "dataLocale" : "ko,KR",
          "scale" : -1,
          "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
          "dateFormat" : "YYYY_MM_DD",
          "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
          "encoding" : "UTF-8"
        }, {
          "fields" : [ "/*Time", "/deviceSerial", "/deviceServerCode", "/deviceCustomDate1", "/deviceCustomDate2", "/deviceCustomNumber1", "/deviceCustomNumber2", "/deviceCustomNumber3", "/flexDate1", "/flexDate2", "/flexDate3", "/flexDate4", "/flexNumber1", "/flexNumber2" ],
          "targetType" : "LONG",
          "treatInputFieldAsDate" : false,
          "dataLocale" : "ko,KR",
          "scale" : -1,
          "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
          "dateFormat" : "YYYY_MM_DD",
          "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
          "encoding" : "UTF-8"
        }, {
          "fields" : [ "/eventId", "/eventCategory", "/eventClassId", "/eventReason", "/eventOutCome", "/rawEvent", "/customerId", "/providerId", "/tenantId", "/domainId", "/applicationProtocol", "/collectorType", "/collectorId", "/assetsId", "/deviceAction", "/deviceCustomString*", "/deviceFacility", "/*Interface", "/deviceProduct", "/devicePayloadId", "/deviceTimeFormat", "/*TimeZone", "/deviceVendor", "/*Version", "/fileId", "/fileType", "/flexString*", "/*Label", "/*Hash", "/oldFileId", "/*Path", "/*Permission", "/oldFileType", "/request*", "/*CountryCode", "/*Address", "/*Domain", "/*UserId", "/*Privileges", "/*ZoneId", "/*Site", "/*Building", "/*Floor", "/*Area", "/*Map", "/deviceChannelId", "/*Name", "/vasUuid", "/vasObject", "/motion*", "/hr*", "/geoPoint*" ],
          "targetType" : "STRING",
          "treatInputFieldAsDate" : false,
          "dataLocale" : "en,US",
          "scale" : -1,
          "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
          "dateFormat" : "YYYY_MM_DD",
          "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
          "encoding" : "UTF-8"
        } ]
      }, {
        "name" : "wholeTypeConverterConfigs",
        "value" : [ {
          "sourceType" : "INTEGER",
          "targetType" : "INTEGER",
          "treatInputFieldAsDate" : false,
          "dataLocale" : "en,US",
          "scale" : -1,
          "decimalScaleRoundingStrategy" : "ROUND_UNNECESSARY",
          "dateFormat" : "YYYY_MM_DD",
          "zonedDateTimeFormat" : "ISO_ZONED_DATE_TIME",
          "encoding" : "UTF-8"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Field Type Converter 1",
        "xPos" : 1160,
        "yPos" : 48.812400817871094,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "FieldRemover_01OutputLane15567726221160" ],
      "outputLanes" : [ "FieldTypeConverter_01OutputLane15567726909990" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldRemover_03",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fieldfilter_FieldFilterDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "filterOperation",
        "value" : "KEEP"
      }, {
        "name" : "fields",
        "value" : [ "/assetsId", "/eventId", "/eventStartTime" ]
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      }, {
        "name" : "constant",
        "value" : null
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Field Remover HealthCheck",
        "xPos" : 1157,
        "yPos" : 234,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "FieldRemover_01OutputLane15567726221160" ],
      "outputLanes" : [ "FieldRemover_03OutputLane15633477542370" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Redis_01",
      "library" : "streamsets-datacollector-redis-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_redis_RedisDTarget",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "conf.uri",
        "value" : "redis://redis-master-cs:6379/3"
      }, {
        "name" : "conf.connectionTimeout",
        "value" : 60
      }, {
        "name" : "conf.maxRetries",
        "value" : 0
      }, {
        "name" : "conf.maxBatchWaitTime",
        "value" : "${5 * SECONDS}"
      }, {
        "name" : "conf.mode",
        "value" : "BATCH"
      }, {
        "name" : "conf.redisFieldMapping",
        "value" : [ {
          "keyExpr" : "/assetsId",
          "valExpr" : "/",
          "dataType" : "HASH",
          "ttl" : 0
        } ]
      }, {
        "name" : "conf.dataFormat",
        "value" : "JSON"
      }, {
        "name" : "conf.channel",
        "value" : [ ]
      }, {
        "name" : "conf.dataFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "conf.dataFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "conf.dataFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "conf.dataFormatConfig.csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "conf.dataFormatConfig.csvReplaceNewLinesString",
        "value" : " "
      }, {
        "name" : "conf.dataFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "conf.dataFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "conf.dataFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "conf.dataFormatConfig.jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "conf.dataFormatConfig.textFieldPath",
        "value" : "/text"
      }, {
        "name" : "conf.dataFormatConfig.textRecordSeparator",
        "value" : "\\n"
      }, {
        "name" : "conf.dataFormatConfig.textFieldMissingAction",
        "value" : "ERROR"
      }, {
        "name" : "conf.dataFormatConfig.textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "conf.dataFormatConfig.avroSchemaSource",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.registerSchema",
        "value" : false
      }, {
        "name" : "conf.dataFormatConfig.schemaRegistryUrlsForRegistration",
        "value" : [ ]
      }, {
        "name" : "conf.dataFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "conf.dataFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "conf.dataFormatConfig.subject",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.subjectToRegister",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.includeSchema",
        "value" : true
      }, {
        "name" : "conf.dataFormatConfig.avroCompression",
        "value" : "NULL"
      }, {
        "name" : "conf.dataFormatConfig.binaryFieldPath",
        "value" : "/"
      }, {
        "name" : "conf.dataFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.fileNameEL",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.wholeFileExistsAction",
        "value" : "TO_ERROR"
      }, {
        "name" : "conf.dataFormatConfig.includeChecksumInTheEvents",
        "value" : false
      }, {
        "name" : "conf.dataFormatConfig.checksumAlgorithm",
        "value" : "MD5"
      }, {
        "name" : "conf.dataFormatConfig.xmlPrettyPrint",
        "value" : true
      }, {
        "name" : "conf.dataFormatConfig.xmlValidateSchema",
        "value" : false
      }, {
        "name" : "conf.dataFormatConfig.xmlSchema",
        "value" : null
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      }, {
        "name" : "conf.dataFormatConfig.csvQuoteMode",
        "value" : "MINIMAL"
      }, {
        "name" : "conf.dataFormatConfig.basicAuthUserInfo",
        "value" : null
      }, {
        "name" : "conf.dataFormatConfig.basicAuthUserInfoForRegistration",
        "value" : null
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Redis HealthCheck",
        "xPos" : 1392,
        "yPos" : 232.4896240234375,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "FieldRemover_03OutputLane15633477542370" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "ExpressionEvaluator_06",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "expressionProcessorConfigs",
        "value" : [ {
          "fieldToSet" : "/baseEventLength",
          "expression" : "${str:length(record:value('/'))}"
        } ]
      }, {
        "name" : "headerAttributeConfigs",
        "value" : [ { } ]
      }, {
        "name" : "fieldAttributeConfigs",
        "value" : [ {
          "fieldToSet" : "/"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Expression Evaluator 1",
        "xPos" : 1380,
        "yPos" : 50,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "FieldTypeConverter_01OutputLane15567726909990" ],
      "outputLanes" : [ "ExpressionEvaluator_06OutputLane15863963253590" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "KafkaProducer_03",
      "library" : "streamsets-datacollector-apache-kafka_2_0-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_kafka_KafkaDTarget",
      "stageVersion" : "7",
      "configuration" : [ {
        "name" : "conf.dataFormat",
        "value" : "JSON"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "conf.dataGeneratorFormatConfig.csvReplaceNewLinesString",
        "value" : " "
      }, {
        "name" : "conf.dataGeneratorFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "conf.dataGeneratorFormatConfig.jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.textFieldPath",
        "value" : "/text"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.textRecordSeparator",
        "value" : "\\n"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.textFieldMissingAction",
        "value" : "ERROR"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "conf.dataGeneratorFormatConfig.avroSchemaSource",
        "value" : null
      }, {
        "name" : "conf.dataGeneratorFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "conf.dataGeneratorFormatConfig.registerSchema",
        "value" : false
      }, {
        "name" : "conf.dataGeneratorFormatConfig.schemaRegistryUrlsForRegistration",
        "value" : [ ]
      }, {
        "name" : "conf.dataGeneratorFormatConfig.schemaRegistryUrls",
        "value" : [ ]
      }, {
        "name" : "conf.dataGeneratorFormatConfig.schemaLookupMode",
        "value" : "SUBJECT"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.subject",
        "value" : null
      }, {
        "name" : "conf.dataGeneratorFormatConfig.subjectToRegister",
        "value" : null
      }, {
        "name" : "conf.dataGeneratorFormatConfig.schemaId",
        "value" : null
      }, {
        "name" : "conf.dataGeneratorFormatConfig.includeSchema",
        "value" : true
      }, {
        "name" : "conf.dataGeneratorFormatConfig.avroCompression",
        "value" : "NULL"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.binaryFieldPath",
        "value" : "/"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "conf.dataGeneratorFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "conf.dataGeneratorFormatConfig.fileNameEL",
        "value" : null
      }, {
        "name" : "conf.dataGeneratorFormatConfig.wholeFileExistsAction",
        "value" : "TO_ERROR"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.includeChecksumInTheEvents",
        "value" : false
      }, {
        "name" : "conf.dataGeneratorFormatConfig.checksumAlgorithm",
        "value" : "MD5"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.xmlPrettyPrint",
        "value" : true
      }, {
        "name" : "conf.dataGeneratorFormatConfig.xmlValidateSchema",
        "value" : false
      }, {
        "name" : "conf.dataGeneratorFormatConfig.xmlSchema",
        "value" : null
      }, {
        "name" : "conf.metadataBrokerList",
        "value" : "kafka-svc:9093"
      }, {
        "name" : "conf.runtimeTopicResolution",
        "value" : false
      }, {
        "name" : "conf.topicExpression",
        "value" : "${record:value('/topic')}"
      }, {
        "name" : "conf.topicWhiteList",
        "value" : "*"
      }, {
        "name" : "conf.topic",
        "value" : "base-event"
      }, {
        "name" : "conf.partitionStrategy",
        "value" : "ROUND_ROBIN"
      }, {
        "name" : "conf.partition",
        "value" : ""
      }, {
        "name" : "conf.singleMessagePerBatch",
        "value" : false
      }, {
        "name" : "conf.keySerializer",
        "value" : "STRING"
      }, {
        "name" : "conf.valueSerializer",
        "value" : "DEFAULT"
      }, {
        "name" : "conf.kafkaProducerConfigs",
        "value" : [ {
          "key" : "acks",
          "value" : "1"
        } ]
      }, {
        "name" : "responseConf.sendResponseToOrigin",
        "value" : false
      }, {
        "name" : "responseConf.responseType",
        "value" : "SUCCESS_RECORDS"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      }, {
        "name" : "conf.messageKeyFormat",
        "value" : "STRING"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.basicAuthUserInfo",
        "value" : ""
      }, {
        "name" : "conf.dataGeneratorFormatConfig.basicAuthUserInfoForRegistration",
        "value" : ""
      }, {
        "name" : "conf.provideKeytab",
        "value" : false
      }, {
        "name" : "conf.userKeytab",
        "value" : ""
      }, {
        "name" : "conf.userPrincipal",
        "value" : "user/host@REALM"
      }, {
        "name" : "conf.dataGeneratorFormatConfig.csvQuoteMode",
        "value" : "MINIMAL"
      }, {
        "name" : "conf.avroMessageKey",
        "value" : "${avro:decode(record:attribute('avroKeySchema'),base64:decodeBytes(record:attribute('kafkaMessageKey')))}"
      }, {
        "name" : "conf.stringMessageKey",
        "value" : "${record:attribute('kafkaMessageKey')}"
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "base-event",
        "xPos" : 1596.550048828125,
        "yPos" : 52.65019130706787,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "ExpressionEvaluator_06OutputLane15863963253590" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "Discard_ErrorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Error Records - Discard",
        "xPos" : 545,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "info" : {
      "pipelineId" : "2KafkaU1dace9ab-c780-4f99-ad72-5630861f7f37",
      "title" : "UtmAxgate_20200625",
      "description" : "",
      "created" : 1729815954530,
      "lastModified" : 1729820324187,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "3005c54c-d1d0-4603-9170-9107f6983ee7",
      "valid" : true,
      "metadata" : {
        "labels" : [ "UTM/Axgate" ]
      },
      "name" : "2KafkaU1dace9ab-c780-4f99-ad72-5630861f7f37",
      "sdcVersion" : "3.16.2",
      "sdcId" : "47830ba5-8ce3-11ef-a5e4-11fb3283ff83"
    },
    "metadata" : {
      "labels" : [ "UTM/Axgate" ]
    },
    "statsAggregatorStage" : {
      "instanceName" : "statsAggregatorStageInstance",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "stageType" : "TARGET",
        "label" : "Stats Aggregator -Write to Control Hub directly"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "startEventStages" : [ {
      "instanceName" : "Discard_StartEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Start Event - Discard",
        "xPos" : 280,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "stopEventStages" : [ {
      "instanceName" : "Discard_StopEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Stop Event - Discard",
        "xPos" : 280,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "testOriginStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStage",
      "library" : "streamsets-datacollector-dev-lib",
      "stageName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource",
      "stageVersion" : "3",
      "configuration" : [ {
        "name" : "rawData",
        "value" : "{\n  \"f1\": \"abc\",\n  \"f2\": \"xyz\",\n  \"f3\": \"lmn\"\n}"
      }, {
        "name" : "stopAfterFirstBatch",
        "value" : false
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "stageType" : "SOURCE",
        "label" : "Test Origin - Dev Raw Data Source"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStageOutputLane1" ],
      "eventLanes" : [ ],
      "services" : [ {
        "service" : "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
        "serviceVersion" : 2,
        "configuration" : [ {
          "name" : "displayFormats",
          "value" : "DELIMITED,JSON,LOG,SDC_JSON,TEXT,XML"
        }, {
          "name" : "dataFormat",
          "value" : "JSON"
        }, {
          "name" : "dataFormatConfig.compression",
          "value" : "NONE"
        }, {
          "name" : "dataFormatConfig.filePatternInArchive",
          "value" : "*"
        }, {
          "name" : "dataFormatConfig.charset",
          "value" : "UTF-8"
        }, {
          "name" : "dataFormatConfig.removeCtrlChars",
          "value" : false
        }, {
          "name" : "dataFormatConfig.textMaxLineLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.useCustomDelimiter",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customDelimiter",
          "value" : "\\r\\n"
        }, {
          "name" : "dataFormatConfig.includeCustomDelimiterInTheText",
          "value" : false
        }, {
          "name" : "dataFormatConfig.jsonContent",
          "value" : "MULTIPLE_OBJECTS"
        }, {
          "name" : "dataFormatConfig.jsonMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.csvFileFormat",
          "value" : "CSV"
        }, {
          "name" : "dataFormatConfig.csvHeader",
          "value" : "NO_HEADER"
        }, {
          "name" : "dataFormatConfig.csvAllowExtraColumns",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvExtraColumnPrefix",
          "value" : "_extra_"
        }, {
          "name" : "dataFormatConfig.csvMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.csvCustomDelimiter",
          "value" : "|"
        }, {
          "name" : "dataFormatConfig.csvCustomEscape",
          "value" : "\\"
        }, {
          "name" : "dataFormatConfig.csvCustomQuote",
          "value" : "\""
        }, {
          "name" : "dataFormatConfig.csvEnableComments",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvCommentMarker",
          "value" : "#"
        }, {
          "name" : "dataFormatConfig.csvIgnoreEmptyLines",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvRecordType",
          "value" : "LIST_MAP"
        }, {
          "name" : "dataFormatConfig.csvSkipStartLines",
          "value" : 0
        }, {
          "name" : "dataFormatConfig.parseNull",
          "value" : false
        }, {
          "name" : "dataFormatConfig.nullConstant",
          "value" : "\\\\N"
        }, {
          "name" : "dataFormatConfig.xmlRecordElement",
          "value" : null
        }, {
          "name" : "dataFormatConfig.includeFieldXpathAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xPathNamespaceContext",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.outputFieldAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xmlMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.logMode",
          "value" : "COMMON_LOG_FORMAT"
        }, {
          "name" : "dataFormatConfig.logMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.retainOriginalLine",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customLogFormat",
          "value" : "%h %l %u %t \"%r\" %>s %b"
        }, {
          "name" : "dataFormatConfig.regex",
          "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
        }, {
          "name" : "dataFormatConfig.fieldPathsToGroupName",
          "value" : [ {
            "fieldPath" : "/",
            "group" : 1
          } ]
        }, {
          "name" : "dataFormatConfig.grokPatternDefinition",
          "value" : null
        }, {
          "name" : "dataFormatConfig.grokPattern",
          "value" : "%{COMMONAPACHELOG}"
        }, {
          "name" : "dataFormatConfig.onParseError",
          "value" : "ERROR"
        }, {
          "name" : "dataFormatConfig.maxStackTraceLines",
          "value" : 50
        }, {
          "name" : "dataFormatConfig.enableLog4jCustomLogFormat",
          "value" : false
        }, {
          "name" : "dataFormatConfig.log4jCustomLogFormat",
          "value" : "%r [%t] %-5p %c %x - %m%n"
        }, {
          "name" : "dataFormatConfig.avroSchemaSource",
          "value" : null
        }, {
          "name" : "dataFormatConfig.avroSchema",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaRegistryUrls",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.schemaLookupMode",
          "value" : "SUBJECT"
        }, {
          "name" : "dataFormatConfig.subject",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaId",
          "value" : null
        }, {
          "name" : "dataFormatConfig.protoDescriptorFile",
          "value" : null
        }, {
          "name" : "dataFormatConfig.messageType",
          "value" : null
        }, {
          "name" : "dataFormatConfig.isDelimited",
          "value" : false
        }, {
          "name" : "dataFormatConfig.binaryMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.datagramMode",
          "value" : "SYSLOG"
        }, {
          "name" : "dataFormatConfig.typesDbPath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.convertTime",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excludeInterval",
          "value" : false
        }, {
          "name" : "dataFormatConfig.authFilePath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesMode",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSize",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMs",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesModeDatagram",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSizeDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMsDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.wholeFileMaxObjectLen",
          "value" : 8192
        }, {
          "name" : "dataFormatConfig.rateLimit",
          "value" : "-1"
        }, {
          "name" : "dataFormatConfig.verifyChecksum",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelHeader",
          "value" : null
        }, {
          "name" : "dataFormatConfig.preserveRootElement",
          "value" : false
        } ]
      } ]
    },
    "valid" : true,
    "issues" : {
      "pipelineIssues" : [ ],
      "stageIssues" : { },
      "issueCount" : 0
    },
    "previewable" : false
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1554859957128,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1554859957128,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1554859957128,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1554859957128,
      "valid" : true
    }, {
      "id" : "memoryLimitAlertID",
      "alertText" : "Memory limit for pipeline exceeded",
      "metricId" : "pipeline.memoryConsumed.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > (jvm:maxMemoryMB() * 0.65)}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1554859957128,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "c187d40d-067e-481d-b732-4eb6ef79cef0",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : [ ],
    "configIssues" : [ ]
  },
  "libraryDefinitions" : null
}